name: ci

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  GOTOOLCHAIN: local

jobs:
  build:
    name: "${{ matrix.os }} CGO=${{ matrix.race.CGO }} tag=${{ matrix.tag }}"
    runs-on: "${{ matrix.os }}-latest"
    strategy:
      matrix:
        os: [ubuntu, windows, macos]
        tag: ["", assert, release]
        race:
          - { CGO: "0", RACE: "" }
          - { CGO: "1", RACE: "halt_on_error=1" }
    env:
      CGO_ENABLED: ${{ matrix.race.CGO }}
      GORACE: ${{ matrix.race.RACE }}
    steps:
      - uses: actions/checkout@v4

      - shell: bash
        run: |
          mkdir -p tmp
          bash "CGO=${{ matrix.race.CGO }} tag=${{ matrix.tag }}" > tmp/build

      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          # cache based on cgo and build tags
          cache-dependency-path: |
            tmp/build
            go.sum
            tools/go.sum

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      # check go mod clean
      - run: go mod tidy
      - run: git diff --exit-code

      - run: go install gotest.tools/gotestsum@latest
        working-directory: tools

      - run: gotestsum --format=pkgname --format-hide-empty-pkg -- '-tags=${{ matrix.tag }}' -count=1 -coverprofile=coverage.txt -covermode=atomic ./...
        shell: bash

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - run: go build '-tags=${{ matrix.tag }}' -o tmp/try.exe
      - run: ./tmp/try.exe --help

name: ci

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  GOTOOLCHAIN: local

jobs:
  build:
    name: "${{ matrix.os }} CGO=${{ matrix.CGO }}"
    runs-on: "${{ matrix.os }}-latest"
    strategy:
      matrix:
        os: [ubuntu, windows, macos]
        CGO: ["0", "1"]
    env:
      CGO_ENABLED: ${{ matrix.CGO }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      # check go mod clean
      - run: go mod tidy
      - run: git diff --exit-code

      - run: task init

      - run: gotestsum --format=testname --format-hide-empty-pkg -- -race -count=1 -coverprofile=coverage.txt -covermode=atomic ./...
        if: ${{ matrix.CGO == '1' }}

      - run: gotestsum --format=testname --format-hide-empty-pkg -- -count=1 -coverprofile=coverage.txt -covermode=atomic ./...
        if: ${{ matrix.CGO == '0' }}

      - run: go build -o tmp/try.exe
      - run: ./tmp/try.exe --help
      - run: go build -tags assert -o tmp/try.exe
      - run: ./tmp/try.exe --help
      - run: go build -tags release -o tmp/try.exe
      - run: ./tmp/try.exe --help
